{"version":3,"sources":["images/burger.svg","images/registerimage4.png","images/loginimage.png","images/filmimage.jpg","images/artimage.jpg","images/musicimage.jpg","lib/auth.js","lib/api.js","utils/useFetch.js","components/common/Home.js","components/common/Navbar.js","components/common/Footer.js","components/common/Error.js","components/common/SecureRoute.js","components/mediums/FilmIndex.js","components/mediums/ArtIndex.js","components/mediums/MusicIndex.js","components/common/Spinner.js","components/common/Reviews.js","components/mediums/MediumShow.js","components/auth/Register.js","components/auth/Login.js","components/common/Favourites.js","App.js","index.js"],"names":["module","exports","setToken","token","localStorage","setItem","getToken","getItem","logout","removeItem","getPayload","parts","split","length","JSON","parse","atob","isAuthenticated","withHeaders","headers","Authorization","getSingleMedium","id","a","axios","get","result","getAllPosts","createReview","reviewData","mediumId","post","deleteReview","medium","reviewId","delete","registerUser","data","loginUser","getSingleUser","addFavourite","res","deleteFavourite","favouriteId","initialState","error","loading","useFetch","request","params","React","useState","state","setState","useEffect","getData","Home","recentPost","setRecentPost","max","to","className","info","film_title","src","image_film","alt","title","art_title","image_art","music_title","image_music","Navbar","navbarStatus","navBarAddClass","handleLogout","props","history","push","responsiveNavbarOnClick","newNavbarState","console","log","prevProps","this","location","pathname","isOpen","onClick","burger","Component","withRouter","Footer","role","aria-label","Error","SecureRoute","component","rest","FilmIndex","dateOfPosts","setDateOfPosts","postsToRender","setFilteredPosts","selectHasBeenUsed","setSelectHasBeenUsed","map","date_posted","moment","format","onChange","e","selectedMonth","target","value","filter","includes","key","mediums","category","creator","duration","image","ArtIndex","MusicIndex","Spinner","type","color","height","width","Reviews","content","rating","rows","reviewsStatus","buttonText","errorMessage","reviewUserIds","oneReviewOnly","reviewOwner","reviews","review","owner","hasUserPostedReview","currentUser","sub","some","reviwUserId","changeRating","newRating","reviewHandleChange","event","reviewHandleSubmit","preventDefault","response","reviewHandleDelete","getAttribute","showMoreReviewsHandleClick","newRows","ShowLessReviewsHandleClick","toggleReviewsHandleClick","onSubmit","placeholder","name","style","widgetDimensions","widgetRatedColors","Widget","widgetHoverColor","slice","index","username","widgetSpacings","review-id","MediumShow","useParams","user","mediumToMap","setMediumToMap","setUpdateFavourites","isFavourite","setIsFavourite","getGenreOfMedium","genres","item","listOfFavourites","favourites","isItAlreadyAFave","find","faveMedium","handleClick","mediumGenre","start_date","end_date","art_gallery_location","art_gallery","year","price","Register","formData","first_name","last_name","email","password","password_confirmation","redirect","errors","handleChange","handleSubmit","status","loginResponse","handleErrors","kind","renderRedirect","sendData","backgroundImage","registerimage4","Login","loginimage","Favourites","buttonClicked","categoryId","favesToRender","userFaves","favourite","parseInt","userId","match","filmimage","artimage","musicimage","App","exact","path","ErrorPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.662fcb6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger.86595150.svg\";","module.exports = __webpack_public_path__ + \"static/media/registerimage4.f64f8abf.png\";","module.exports = __webpack_public_path__ + \"static/media/loginimage.48d71fd5.png\";","module.exports = __webpack_public_path__ + \"static/media/filmimage.65769252.jpg\";","module.exports = __webpack_public_path__ + \"static/media/artimage.fff244f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/musicimage.54e9cf82.jpg\";","export const setToken = token => {\n  localStorage.setItem('token', token)\n}\n\nexport const getToken = () => {\n  return localStorage.getItem('token')\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token')\n}\n\nexport const getPayload = () => {\n  const token = getToken() \n  if (!token) return false \n  const parts = token.split('.') \n  if (parts.length < 3) return false \n  return JSON.parse(atob(parts[1]))\n}\n\nexport const isAuthenticated = () => {\n  const token = getToken() \n  if (!token) return false \n  const parts = token.split('.') \n  if (parts.length < 3) return false\n  return JSON.parse(atob(parts[1]))\n} \n\nexport const isOwner = id => {\n  const subject = getPayload().sub\n  return id === subject\n}\n","import axios from 'axios'\nimport { getToken } from './auth'\nconst baseUrl = '/api'\nconst withHeaders = () => {\n  return { headers: { Authorization: `Bearer ${getToken()}` } }\n}\n//! MEDIUMS\nexport const getAllMediums = () => {\n  return axios.get(`${baseUrl}/mediums/`)\n}\nexport const getSingleMedium = async id => {\n  const result = await axios.get(`${baseUrl}/mediums/${id}/`)\n  return result\n}\n//! POSTS\nexport const getAllPosts = async () => {\n  const result = await axios.get(`${baseUrl}/posts/`)\n  return result\n}\nexport const getSinglePost = async id => {\n  const result = axios.get(`${baseUrl}/posts/${id}/`)\n  return result\n}\n//! REVIEWS\nexport const createReview = async ( reviewData, mediumId) => {\n  const result = await axios.post(`${baseUrl}/reviews/${mediumId}/`, reviewData, withHeaders())\n  return result\n}\nexport const deleteReview = async ( medium, reviewId ) => {\n  const result = await axios.delete(`${baseUrl}/reviews/${reviewId}/`, withHeaders())\n  return result\n}\n//! Register\nexport const registerUser = async data => {\n  const result = axios.post(`${baseUrl}/register`, data)\n  return result\n}\n//! Login\nexport const loginUser = async data => {\n  const result = axios.post(`${baseUrl}/login`, data)\n  return result\n}\n//! USER\nexport const getSingleUser = async () => {\n  const result = await axios.get(`${baseUrl}/profile`, withHeaders())\n  return result\n}\n//! ADD A FAVOURITE \nexport const addFavourite = async (mediumId) => {\n  const res = await axios.post(`${baseUrl}/favourites/`, { medium: mediumId }, withHeaders())\n  return res\n}\n//! DELETE FAVOURITE\nexport const deleteFavourite = async (favouriteId) => {\n  const res = await axios.delete(`${baseUrl}/favourites/${favouriteId}/`, withHeaders())\n  return res \n}","import React from 'react'\n\nconst initialState = {\n  data: null,\n  error: null,\n  loading: true\n}\n\nfunction useFetch(request, params = null) {\n  const [state, setState] = React.useState(initialState)\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await request(params)\n        setState({ data, loading: false, error: null })\n      } catch (err) {\n        setState({ error: true , loading: false, data: null })\n      }\n    }\n    getData()\n  }, [request, params])\n  return state\n}\n\nexport default useFetch\n","import React, { useEffect, useState } from 'react'\nimport { getAllPosts } from '../../lib/api'\nimport useFetch from '../../utils/useFetch'\nimport { Redirect, Link } from 'react-router-dom'\n\nfunction Home() {\n\n  //* data in this context is what is being returned from useFetch. What we are doing here is renaming data: with post. So we don't need to use this.state. Everything is on post.\n  const { data: post, error } = useFetch(getAllPosts)\n  const [ recentPost, setRecentPost ] = useState('') //* setting state here.\n\n  useEffect(() => {\n    const max = post ? post.length - 1 : null //* making the result ternary. Doing it here rather than the render, using the varaible to specify. Only creates variable max with post length if post exists. (-1 becaue length is not the same as the index number)\n\n    const recentPost = max ? post[max] : null\n\n    setRecentPost(recentPost) //* sets post with index that has the greatest value to state -> it can be resued using recentPost\n\n  },[post]) //* every time post changes. It will trigger this function to run\n\n  if (error) {\n    return <Redirect to=\"/notfound\" />\n  }\n\n  return (\n    <div className=\"home-page\">\n      <h1 className=\"home-tile-fam\">FAM</h1>\n      <div className=\"text-wrap\">\n        <p className='info-wrapper home-page-p'>\n      IN CASE YOU MISSED IT \n          <br/>\n\nWelcome to the FAM Website.\nDiscover new music, film, art as we share with you all the things we’ve been loving each month.<br/>  \n          {/* The landing pages show a selection of our newest obsessions -  */}\n\nWhy not sign up so you can Get With It and be part of our conversation. Curate your own favourite lists, leave reviews and become a part of FAM\n    \n        </p>\n      </div>\n      {recentPost ? //* use recentPost here instead of loading\n      //* anything you put before colon will be loaded. If there's nothing there it render the loading spinner.\n        <div>\n          <h2 className='info-wrapper index-page-h2'>{recentPost.info}</h2>\n          <div className='home-wrapper'>\n            <div className='home-item-wrapper'>\n              <h3 className='home-medium-main-title-film'>{recentPost.film_title}</h3>\n              <Link to={'/film'}>\n                <img className='home-image-film responsive-home-image' src={recentPost.image_film} alt={recentPost.title} />\n              </Link>\n            </div>\n            <div className='home-item-wrapper'>\n              <h3 className='home-medium-main-title-art'>{recentPost.art_title}</h3>\n              <Link to={'/art'}>\n                <img className='home-image-art responsive-home-image' src={recentPost.image_art} alt={recentPost.title} />\n              </Link>\n            </div>\n            <div className='home-item-wrapper'>\n              <h3 className='home-medium-main-title-music'>{recentPost.music_title}</h3>\n              <Link to={'/music'}>\n                <img className='home-image-music responsive-home-image' src={recentPost.image_music} alt={recentPost.title}/>\n              </Link>\n            </div>\n          </div>\n        </div>\n        :\n        null\n      }\n    </div>\n  )\n\n}\n\n\nexport default Home\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { logout, isAuthenticated } from '../../lib/auth'\nimport burger from '../../images/burger.svg'\n\nclass Navbar extends React.Component{ \n  state = {\n    navbarStatus: false,\n    navBarAddClass: ''\n  }\n\n  handleLogout = () => {\n    logout()\n    this.props.history.push('/')\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.setState({ isOpen: false })\n    }\n  }\n\n  responsiveNavbarOnClick = () => {\n    const newNavbarState = this.state.navbarStatus\n    this.setState({ navbarStatus: !newNavbarState })\n    if (newNavbarState) {\n      this.setState({ navBarAddClass: ' active' }) //* adding className. If navbar is open\n    } else {\n      this.setState({ navBarAddClass: '' }) //* adding className. else if navbar is closed\n    }\n    console.log(this.state.navBarAddClass)\n  }\n\n  render() {\n    const { navBarAddClass } = this.state\n    return (\n      <menu className={navBarAddClass}>\n        <div className=\"burger-icon\" onClick={this.responsiveNavbarOnClick}> \n          <img className=\"burger-image\" src={burger}/>\n        </div>\n        \n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          <Link to=\"/\">Home</Link>\n        </div>\n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          <Link to=\"/film\">Film</Link>\n        </div>\n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          <Link to=\"/art\">Art</Link>\n        </div>\n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          <Link to=\"/music\">Music</Link>\n        </div>\n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          {isAuthenticated() && <Link to=\"/profile\">My Favourites</Link>}\n        </div>\n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          {!isAuthenticated() && <Link to=\"/register\">Register</Link>}\n        </div>\n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          {!isAuthenticated() && <Link to=\"/login\">Login</Link>}\n        </div>\n        <div className=\"menu-item\" onClick={this.responsiveNavbarOnClick}>\n          {isAuthenticated() && <Link to=\"/\" onClick={this.handleLogout}>Logout</Link>}\n        </div>\n      </menu>\n    )\n\n  }\n}\n\nexport default withRouter(Navbar)","import React from 'react'\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered \">\n        {/* <p> */}\n        {/* <strong className=\"has-text-grey\">\n            <span role=\"img\" aria-label=\"logo\" className=\"logo-emoji\">🧀</span>\n              CheeseBored\n            <span role=\"img\" aria-label=\"logo\" className=\"logo-emoji\">🧀</span>\n          </strong>\n        </p> */}\n        <p className=\"footer-p\">\n          Made with <span role=\"img\" aria-label=\"logo\" className=\"logo-emoji\">❤️</span> By Eleanor &  Yarden\n        </p>\n      </div>\n    </footer>\n  ) \n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Error() {\n  return (\n    <section className=\"hero is-fullheight-with-navbar\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <p className=\"title is-1 has-text-centered yellow-error\">Oh no! Something went wrong. Please try again</p>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Error","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { logout, isAuthenticated }  from '../../lib/auth'\n\nfunction SecureRoute({ component: Component, ...rest }) {\n  if (isAuthenticated()) return <Route {...rest} component={Component} />\n  logout()\n  return <Redirect to=\"/login\" />\n}\n\nexport default SecureRoute\n","import React, { useEffect, useState } from 'react'\nimport { getAllPosts } from '../../lib/api'\nimport useFetch from '../../utils/useFetch'\nimport { Redirect, Link } from 'react-router-dom'\nimport moment from 'moment'\n\nfunction FilmIndex() {\n  const { data: post, error } = useFetch(getAllPosts)\n  const [recentPost, setRecentPost] = useState('') //* setting state here. \n  const [dateOfPosts, setDateOfPosts] = useState('')\n  const [postsToRender, setFilteredPosts] = useState('')\n  const [selectHasBeenUsed, setSelectHasBeenUsed] = useState(false)\n\n  useEffect(() => {\n    const max = post ? post.length - 1 : null //* making the result ternary. Doing it here rather than the render, using the varaible to specify. Only creates variable max with post length if post exists. (-1 becaue length is not the same as the index number)\n\n    const recentPost = max ? post[max] : null\n\n    setRecentPost(recentPost) //* sets post with index that has the greatest value to state -> it can be resued using recentPost\n\n    const dateOfPosts = post ? post.map(post => (\n\n      { ...post, date_posted: moment(post.date_posted).format('LL') } //* Change date into usable format - set these fromatted date posts to state\n    )) : null\n\n    setDateOfPosts(dateOfPosts)\n\n\n\n  }, [post]) //* every time post changes. It will trigger this function to run\n\n  const handleChange = (e) => {\n    setSelectHasBeenUsed(true)\n    const selectedMonth = e.target.value\n    const postsToRender = dateOfPosts.filter(post =>\n      post.date_posted.includes(selectedMonth)\n\n    )\n    return setFilteredPosts(postsToRender)\n  }\n\n  if (error) {\n    return <Redirect to=\"/notfound\" />\n  }\n\n\n\n\n\n  return (\n    <div>\n      <div className=\"fam-title-index-container\">\n        <h1 className=\"home-tile-fam\">FAM</h1>\n      </div>\n      <div className='select-wrapper'>\n        <select onChange={handleChange} className='select-dropdown  fadeInUp'>\n\n          <option>Filter By Month</option>\n          <option value=\"January\">JANUARY</option>\n          <option value=\"February\">FEBRUARY</option>\n          <option value=\"March\">MARCH</option>\n          <option value=\"April\">APRIL</option>\n          <option value=\"May\">MAY</option>\n          <option value=\"June\">JUNE</option>\n          <option value=\"July\">JULY</option>\n          <option value=\"August\">AUGUST</option>\n          <option value=\"September\">SEPTEMBER</option>\n          <option value=\"October\">OCTOBER</option>\n          <option value=\"November\">NOVEMBER</option>\n          <option value=\"December\">DECEMBER</option>\n        </select>\n      </div>\n      <div>\n        {selectHasBeenUsed ? (\n          postsToRender.map(post => (\n            <div className=\"medium-index-wrapper\" key={post.id}>\n              {/* <h2 className='post-title'>{post.title}</h2> */}\n              <h2 className='index-page-h2'>{post.film_title}</h2>\n              {post.mediums.map((medium) =>\n                medium.category === 2 ? (\n                  <div className='medium-wrapper' key={medium.id}>\n                    <div className=\"medium-info\">\n                      <h1 className='index-page-h1-title'>{medium.title}</h1>\n                      <h1 className='index-page-h1'>{medium.creator}</h1>\n                      <h1 className='index-page-h1-duration'>{medium.duration}</h1>\n                    </div>\n                    <div className=\"medium-img\">  \n                      <Link to={`/mediums/${medium.id}`}>\n                        <img className='medium-image-index' src={medium.image} alt={medium.title} />\n                      </Link>\n                    </div>\n                  </div>\n                ) : null\n              )}\n            </div>\n          ))\n        ) : recentPost ? (\n          <div className=\"medium-index-wrapper\">\n            {/* <h1>{recentPost.title}</h1> */}\n            <h2 className='index-page-h2'>{recentPost.film_title}</h2>\n            {recentPost.mediums.map((medium) =>\n              medium.category === 2 ? (\n                <div className='medium-wrapper' key={medium.id}>\n                  <div className=\"medium-info\">\n                    <h1 className='index-page-h1-title'>{medium.title}</h1>\n                    <h1 className='index-page-h1'>{medium.creator}</h1>\n                    <h1 className='index-page-h1-duration'>{medium.duration}</h1>\n                  </div>\n                  <div className=\"medium-img\">\n                    <Link to={`/mediums/${medium.id}`}>\n                      <img className='medium-image-index'src={medium.image} alt={medium.title} />\n                    </Link>\n                    {/* <video src={medium.video} /> */}\n                  </div>\n                </div>\n              ) :\n                null\n            )}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n\n}\n\nexport default FilmIndex","import React, { useEffect, useState } from 'react'\nimport { getAllPosts } from '../../lib/api'\nimport useFetch from '../../utils/useFetch'\nimport { Redirect, Link } from 'react-router-dom'\n// import Spinner from '../common/Spinner'\nimport moment from 'moment'\n\nfunction ArtIndex() {\n  const { data: post, error } = useFetch(getAllPosts)\n  const [recentPost, setRecentPost] = useState('') //* setting state here. \n  const [dateOfPosts, setDateOfPosts] = useState('')\n  const [postsToRender, setFilteredPosts] = useState('')\n  const [selectHasBeenUsed, setSelectHasBeenUsed] = useState(false)\n\n  useEffect(() => {\n    const max = post ? post.length - 1 : null //* making the result ternary. Doing it here rather than the render, using the varaible to specify. Only creates variable max with post length if post exists. (-1 becaue length is not the same as the index number)\n\n    const recentPost = max ? post[max] : null\n\n    setRecentPost(recentPost) //* sets post with index that has the greatest value to state -> it can be resued using recentPost\n\n    const dateOfPosts = post ? post.map(post => (\n\n      { ...post, date_posted: moment(post.date_posted).format('LL') } //* Change date into usable format - set these fromatted date posts to state\n    )) : null\n\n    setDateOfPosts(dateOfPosts)\n\n\n\n  }, [post]) //* every time post changes. It will trigger this function to run\n\n  const handleChange = (e) => {\n    setSelectHasBeenUsed(true)\n    const selectedMonth = e.target.value\n    const postsToRender = dateOfPosts.filter(post =>\n      post.date_posted.includes(selectedMonth)\n\n    )\n    return setFilteredPosts(postsToRender)\n  }\n\n  if (error) {\n    return <Redirect to=\"/notfound\" />\n  }\n\n\n\n\n\n  return (\n    <div>\n      <div className=\"fam-title-index-container\">\n        <h1 className=\"home-tile-fam\">FAM</h1>\n      </div>\n\n      <div className='select-wrapper'>\n        <select onChange={handleChange} className='select-dropdown  fadeInUp'>\n\n          <option >Filter By Month</option>\n          <option value=\"January\">JANUARY</option>\n          <option value=\"February\">FEBRUARY</option>\n          <option value=\"March\">MARCH</option>\n          <option value=\"April\">APRIL</option>\n          <option value=\"May\">MAY</option>\n          <option value=\"June\">JUNE</option>\n          <option value=\"July\">JULY</option>\n          <option value=\"August\">AUGUST</option>\n          <option value=\"September\">SEPTEMBER</option>\n          <option value=\"October\">OCTOBER</option>\n          <option value=\"November\">NOVEMBER</option>\n          <option value=\"December\">DECEMBER</option>\n        </select>\n      </div>\n      <div>\n        {selectHasBeenUsed ? (\n          postsToRender.map(post => (\n            <div className=\"medium-index-wrapper\" key={post.id}>\n              {/* <h1>{post.title}</h1> */}\n              <h2 className='index-page-h2'>{post.art_title}</h2>\n              {post.mediums.map((medium) =>\n                medium.category === 1 ? (\n                  <div className='medium-wrapper' key={medium.id}>\n                    <div className=\"medium-info\">\n                      <h1 className='index-page-h1-title'>{medium.title}</h1>\n                      <h1 className='index-page-h1'>{medium.creator}</h1>\n                    </div>\n                    <div className=\"medium-img\">\n                      <Link to={`/mediums/${medium.id}`}>\n                        <img className='medium-art-index' src={medium.image} alt={medium.title} />\n                      </Link>\n                    </div>\n                  </div>\n                ) : null\n              )}\n            </div>\n          ))\n\n\n        ) : recentPost ? (\n          <div className=\"medium-index-wrapper\">\n            {/* <h1>{recentPost.title}</h1> */}\n            <h2 className='index-page-h2'>{recentPost.art_title}</h2>\n            {recentPost.mediums.map((medium) =>\n              medium.category === 1 ? (\n                <div className='medium-wrapper' key={medium.id}>\n                  <div className=\"medium-info\">\n                    <h1 className='index-page-h1-title'>{medium.title}</h1>\n                    <h1 className='index-page-h1'>{medium.creator}</h1>\n                  </div>\n                  <div className=\"medium-img\">\n                    <Link to={`/mediums/${medium.id}`}>\n                      <img className='medium-art-index' src={medium.image} alt={medium.title} />\n                    </Link>\n                    {/* <video src={medium.video} /> */}\n                  </div>\n                </div>\n              ) :\n                null\n            )}\n          </div>\n        ) : null\n        }\n      </div >\n    </div >\n  )\n\n}\n\nexport default ArtIndex","import React, { useEffect, useState } from 'react'\nimport { getAllPosts } from '../../lib/api'\nimport useFetch from '../../utils/useFetch'\nimport { Redirect, Link } from 'react-router-dom'\n// import Spinner from '../common/Spinner'\nimport moment from 'moment'\n\nfunction MusicIndex() {\n  const { data: post, error } = useFetch(getAllPosts)\n  const [recentPost, setRecentPost] = useState('') //* setting state here. \n  const [dateOfPosts, setDateOfPosts] = useState('')\n  const [postsToRender, setFilteredPosts] = useState('')\n  const [selectHasBeenUsed, setSelectHasBeenUsed] = useState(false)\n\n  useEffect(() => {\n    const max = post ? post.length - 1 : null //* making the result ternary. Doing it here rather than the render, using the varaible to specify. Only creates variable max with post length if post exists. (-1 becaue length is not the same as the index number)\n\n    const recentPost = max ? post[max] : null\n\n    setRecentPost(recentPost) //* sets post with index that has the greatest value to state -> it can be resued using recentPost\n\n    const dateOfPosts = post ? post.map(post => ( //* Mapping over the \n\n      { ...post, date_posted: moment(post.date_posted).format('LL') } //* Change date into usable format - set these fromatted date posts to state\n    )) : null\n\n    setDateOfPosts(dateOfPosts)\n\n\n\n  }, [post]) //* every time post changes. It will trigger this function to run\n\n  const handleChange = (e) => {\n    setSelectHasBeenUsed(true)\n    const selectedMonth = e.target.value\n    const postsToRender = dateOfPosts.filter(post =>\n      post.date_posted.includes(selectedMonth)\n\n    )\n    return setFilteredPosts(postsToRender)\n  }\n\n  if (error) {\n    return <Redirect to=\"/notfound\" />\n  }\n\n\n\n\n\n  return (\n    <div>\n      <div className=\"fam-title-index-container\">\n        <h1 className=\"home-tile-fam\">FAM</h1>\n      </div>\n      <div className='select-wrapper'>\n        <select onChange={handleChange} className='select-dropdown  fadeInUp'>\n\n          <option >Filter By Month</option>\n          <option value=\"January\">JANUARY</option>\n          <option value=\"February\">FEBRUARY</option>\n          <option value=\"March\">MARCH</option>\n          <option value=\"April\">APRIL</option>\n          <option value=\"May\">MAY</option>\n          <option value=\"June\">JUNE</option>\n          <option value=\"July\">JULY</option>\n          <option value=\"August\">AUGUST</option>\n          <option value=\"September\">SEPTEMBER</option>\n          <option value=\"October\">OCTOBER</option>\n          <option value=\"November\">NOVEMBER</option>\n          <option value=\"December\">DECEMBER</option>\n        </select>\n      </div>\n      <div>\n        {selectHasBeenUsed ? (\n          postsToRender.map(post => (\n            <div className=\"medium-index-wrapper\" key={post.id}>\n              {/* <h1 >{post.title}</h1> */}\n              <h2 className='index-page-h2'>{post.music_title}</h2>    {post.mediums.map((medium) =>\n                medium.category === 3 ? (\n                  <div className='medium-wrapper' key={medium.id}>\n                    <div className=\"medium-info\">\n                      <h1 className='index-page-h1-title'>{medium.title}</h1>\n                      <h1 className='index-page-h1'>{medium.creator}</h1>\n                      <h1 className='index-page-h1-duration'>{medium.duration}</h1>\n                    </div>\n                    <div className=\"medium-img\"> \n                      <Link to={`/mediums/${medium.id}`}>\n                        <img className='medium-image-index' src={medium.image} alt={medium.title} />\n                      </Link>\n                    </div>\n                  </div>\n                ) : null\n              )}\n            </div>\n          ))\n\n\n        ) : recentPost ? (\n          <div className=\"medium-index-wrapper\">\n            {/* <h1>{recentPost.title}</h1> */}\n            <h2 className='index-page-h2'>{recentPost.music_title}</h2>\n            {recentPost.mediums.map((medium) =>\n              medium.category === 3 ? ( //* music is category 3\n                <div className='medium-wrapper' key={medium.id}>\n                  <div className=\"medium-info\">\n                    <h1 className='index-page-h1-title'>{medium.title}</h1>\n                    <h1 className='index-page-h1'>{medium.creator}</h1>\n                    <h1 className='index-page-h1-duration'>{medium.duration}</h1>\n                  </div>\n                  <div className=\"medium-img\">\n                    <Link to={`/mediums/${medium.id}`}>\n                      <img className='medium-image-index' src={medium.image} alt={medium.title} />\n                    </Link>\n                    {/* <video src={medium.video} /> */}\n                  </div>\n                </div>\n              ) :\n                null\n            )}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default MusicIndex\n\n","import React from 'react'\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport Loader from 'react-loader-spinner'\n\nfunction Spinner() {\n  return (\n    <div className=\"loading\">\n      <Loader type=\"TailSpin\" color=\"yellow\" height=\"100\" width=\"100\" />\n    </div>\n  )\n}\n\nexport default Spinner\n","import React from 'react'\n\nimport { createReview, getSingleMedium, deleteReview } from '../../lib/api'\nimport { isOwner, getPayload, isAuthenticated } from '../../lib/auth'\nimport Ratings from 'react-ratings-declarative'\n\n\nclass Reviews extends React.Component {\n  state = {\n    medium: null,\n    content: '',\n    rating: 0,\n    rows: '3',\n    reviewsStatus: true,\n    buttonText: 'Show More Reviews',\n    errorMessage: null,\n    reviewUserIds: null\n  }\n\n  async getData() { //* this function can be called whenever you need to update the info on the page\n    try {\n      const mediumId = this.props.mediumId\n      const res = await getSingleMedium(mediumId)\n      this.setState({ medium: res.data })\n\n      //* checking if there's a medium in state, if so triggering oneReviewOnly\n      if (this.state.medium) {\n        return this.oneReviewOnly()\n      } else {\n        return\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  componentDidMount() {\n    this.getData() //* calling the getData function as soon as the page loads to display the info straight away\n  }\n\n    //! FINDING USER IDS IN MEDIUM.REVIEWS AND SETTING THEM TO STATE WITH reviewUserIds: reviewOwner\n    oneReviewOnly = async () => {\n      try {\n        const reviewOwner = this.state.medium.reviews.map(review => {\n          return review.owner.id\n        })\n        this.setState({ reviewUserIds: reviewOwner }) //* setting state to result of above map function\n      } catch (error) {\n        console.log(error)\n      }\n      this.hasUserPostedReview() //* comment out\n    }\n\n    //! HAS THE USER ALREADY POSTED A REVIEW\n    //* can use this function as a \"checker function\" to see if it's true or false before the return in the render. Determining whether or not to render the code. Conditional rendering\n    hasUserPostedReview = () => {\n      const currentUser = getPayload().sub\n      return this.state.reviewUserIds.some(reviwUserId => reviwUserId === currentUser) //* single version of array I'm looping through. Seeing if reviewUserId is === to currentUser. Should return true if the currentUser has left a review already\n    }\n\n\n  //! RATING\n  changeRating = ( newRating ) => {\n    try {\n      this.setState({\n        rating: newRating\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  //! Reviews\n  reviewHandleChange = event => {\n    const content = event.target.value //* saving what the user types into the Review box\n    this.setState({ content }) //* setting state with their review\n  }\n\n  reviewHandleSubmit = async event => {\n    event.preventDefault()\n    const mediumId = this.props.mediumId\n    if (this.state.rating === 0 || this.state.rating > 5) {\n      this.setState({ errorMessage: 'Please Add A Rating To Your Review' }) //* if user tried to post a review without adding a rating\n      return\n    }\n    try {\n      this.setState({ errorMessage: null }) //* if user has added a rating to review or there was an error message before then we can set the error message back to null\n      await createReview({ content: this.state.content, rating: this.state.rating, medium: mediumId }, mediumId) //* the add review function requires a text field so you can pass it through like so - also it needs to match the order that you're using the arguments in your api.js file\n      this.setState({ content: '', rating: 0 }) //* setting the review box back to empty\n      this.getData() //* calling this getData function again to reload the page with the new database info and display your new review straight away!\n    } catch (err) {\n      console.log(err.response.data)\n    }\n\n  }\n\n  reviewHandleDelete = async event => {\n    event.preventDefault()\n\n    try {\n      const reviewId = event.target.getAttribute('review-id')\n\n      const mediumId = this.state.medium.id\n\n      await deleteReview(mediumId, reviewId)\n\n    } catch (err) {\n      console.log(err)\n    }\n    this.getData()\n  }\n\n  showMoreReviewsHandleClick = async () => {\n    //* now the rows will be equal to the comments array lenght and all the comments will be shown\n    const newRows = this.state.medium.reviews.length\n    this.setState({ rows: newRows })\n    this.getData()\n\n  }\n\n  ShowLessReviewsHandleClick = async () => {\n    const lessRows = '3'\n    this.setState({ rows: lessRows })\n    this.getData()\n  }\n\n  toggleReviewsHandleClick = async event => {\n    event.preventDefault()\n    const show = this.state.reviewsStatus\n\n    if (show) {\n      this.setState({ reviewsStatus: false, buttonText: 'Show Less Reviews' })\n      this.showMoreReviewsHandleClick()\n    } else {\n      this.setState({ reviewsStatus: true, buttonText: 'Show More Reviews' })\n      this.ShowLessReviewsHandleClick()\n    }\n  }\n\n  render() {\n    if (!this.state.medium) return null\n    if (!this.state.reviewUserIds) return null\n\n    const { medium, content, buttonText, rating, rows } = this.state //* content field in state\n\n    return (\n      <>\n        <div className=\"media-content\">\n          \n          {!this.hasUserPostedReview() && isAuthenticated() ? <form onSubmit={this.reviewHandleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <textarea\n                  className=\"textarea\"\n                  placeholder=\"Enter Your Review Here\"\n                  name=\"content\"\n                  onChange={this.reviewHandleChange}\n                  value={content}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control reviews-p-button-wrap\">\n                <button type=\"submit\" className=\"button post-review-button\">Post Review</button>\n              </p>\n              <br />\n            </div>\n          </form> : null}\n          \n          \n          {this.state.errorMessage ? <div style={{ color: 'red' }}>{this.state.errorMessage}</div> : null }\n          {!this.hasUserPostedReview() && isAuthenticated() ? \n            <Ratings\n              rating={rating}\n              widgetDimensions=\"40px\"\n              widgetRatedColors=\"gold\"\n              changeRating={this.changeRating}\n            >\n              <Ratings.Widget widgetHoverColor=\"gold\"/>\n              <Ratings.Widget widgetHoverColor=\"gold\"/>\n              <Ratings.Widget widgetHoverColor=\"gold\"/>\n              <Ratings.Widget widgetHoverColor=\"gold\"/>\n              <Ratings.Widget widgetHoverColor=\"gold\"/>\n            </Ratings> : null\n          } \n          <div>\n            <article className=\"media\">\n              <div className=\"media-content\">\n                <div className=\"content\">\n                  {medium.reviews.slice(0, rows).map((review, index) => {\n                    return (\n                      <div className=\"item\" key={index}>\n                        <p>\n                          <strong>{review.owner.username}</strong>\n                        </p>\n                        <p> {review.content} </p>\n                        <Ratings\n                          rating={review.rating}\n                          widgetRatedColors=\"gold\"\n                          widgetDimensions=\"20px\"\n                          widgetSpacings=\"3px\"\n                        >\n                          <Ratings.Widget widgetHoverColor=\"gold\"/>\n                          <Ratings.Widget widgetHoverColor=\"gold\"/>\n                          <Ratings.Widget widgetHoverColor=\"gold\"/>\n                          <Ratings.Widget widgetHoverColor=\"gold\"/>\n                          <Ratings.Widget widgetHoverColor=\"gold\"/>\n                        </Ratings>\n                        {isOwner(review.owner.id) &&\n                        <button className=\"review-delete-button\" review-id={review.id}\n                          onClick={this.reviewHandleDelete}>Delete\n                        </button>}\n                        <hr />\n                      </div>\n                    )\n                  })}\n                  {this.state.medium.reviews.length > 3 &&\n                  <button className=\"button show-more-less-button\" onClick={this.toggleReviewsHandleClick}>{buttonText}</button>}\n                </div>\n              </div>\n            </article>\n          </div>\n        </div> \n      </>\n    )\n  }\n\n}\n\nexport default Reviews\n","\n\nimport React, { useEffect, useState } from 'react'\nimport {\n  getSingleMedium,\n  getSingleUser,\n  addFavourite,\n  deleteFavourite\n} from '../../lib/api'\nimport useFetch from '../../utils/useFetch'\nimport { Redirect, useParams } from 'react-router-dom'\nimport Spinner from '../common/Spinner'\nimport Reviews from '../common/Reviews'\nimport { isAuthenticated } from '../../lib/auth'\nfunction MediumShow() {\n  const { id } = useParams()\n  const { data: medium, loading, error } = useFetch(getSingleMedium, id)\n  const { data: user } = useFetch(getSingleUser)\n  const [mediumToMap, setMediumToMap] = useState([]) //* setting state here\n  // eslint-disable-next-line no-unused-vars\n  const [userFavourites, setUpdateFavourites] = useState([])\n  const [isFavourite, setIsFavourite] = useState(null) //! changed from false to empty object becasue that's what you are getting returned. Then changed it to null, so if there is an object inside there it will be true\n\t\n  useEffect(() => {\n\t\t// if (!(medium && user)) return\n\t\tif (!medium) return \n\t\tif (!user) return \n\t\tconsole.log('this is user', user)\n    const getGenreOfMedium = medium.genres.map((item) => item) //* if medium is loaded -> continue to medium.genres.map -> if it's not this return null\n    const listOfFavourites = user.favourites.map((item) => item) || [] //* adding an 'or' here means that if the user has no favourites listOfFavourites will be an empty array rather than undefined so it shouldnt error\n    const mediumId = medium.id //* you can remove this if you want and just use medium.id in the find function but totally up to you\n    const isItAlreadyAFave = listOfFavourites.find((faveMedium) => faveMedium.medium.id === mediumId) //! Changed from .some to .find becasue we want to find the whole object not just return a boolean\n    //! Just changed faveMedium.id to faveMedium.medium.id becasue it's dounble nested (want to compare 2 mediumIds not favouriteId and mediumId)\n    //* setting everything to state here:\n    setMediumToMap(getGenreOfMedium)\n    setIsFavourite(isItAlreadyAFave)\n    setUpdateFavourites(listOfFavourites)\n    //! ** The if else was here originally but didn't make sense to be inside the useEffect becasue it wouldn't know about any state change at this point\n  }, [medium, user]) //* every time medium  and user change. It will trigger this function to run\n  //! There was an if else statement here checking if the medium was a favourite or not and changing the button text accordingly, but don't need that anymore with the ternary inside the button text in return **\n  const handleClick = async (e) => {\n    const mediumId = e.target.value\n    if (isFavourite) {\n      const result = await deleteFavourite(isFavourite.id)\n      setUpdateFavourites(result.data)\n      setIsFavourite(null)\n    } else {\n      const res = await addFavourite(mediumId)\n      const medium = res.data\n      setIsFavourite(medium)\n    }\n  }\n  if (error) {\n    return <Redirect to=\"/notfound\" />\n  }\n  return (\n    <div>\n      <br />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div className=\"medium-show-flex\">\n          <div className=\"fam-title-index-container\">\n            <h1 className=\"home-tile-fam\">FAM</h1>\n          </div>\n          <div className=\"medium-show-row\">\n            <div className=\"favourite-show-button-wrap\">\n              {isAuthenticated() && (\n                <button className=\"add-to-favourites-button\" onClick={handleClick} value={medium.id}>\n                  {isFavourite ? 'Remove from favourites' : 'Add to favourites'}\n                </button>\n              )}\n            </div>\n          </div>\n          <div className=\"medium-show-row\">\n            <div className=\"medium-show-image-div\">\n              <img className=\"medium-show-image\" src={medium.image} alt={medium.title} />\n            </div>\n            <div className=\"medium-show-text\">\n              <div>\n                <h1 className=\"medium-show-medium-title\">{medium.title}</h1>\n                {mediumToMap\n                  ? mediumToMap.map((\n                    mediumGenre //* like this.state. using mediumToMap from state\n                  ) => (\n                    <h1 className=\"medium-show-medium-genre\" key={mediumGenre.id}>{mediumGenre.name}</h1> //* this the genre\n                  ))\n                  : null}\n\n                <h1 className=\"medium-show-medium-creator\">{medium.creator}</h1>\n                <h1 className=\"medium-show-medium-duration\">{medium.duration}</h1>\n                <h1 className=\"medium-show-medium-date\">\n                  {medium.start_date} {medium.end_date}\n                </h1>\n                <h1 className=\"medium-show-medium-art-gallery-location\">{medium.art_gallery_location}</h1>\n                <h1 className=\"medium-show-medium-art-gallery\">{medium.art_gallery}</h1>\n                <h2 className=\"medium-show-medium-year\">{medium.year}</h2> \n                <h1 className=\"medium-show-medium-price\">{medium.price}</h1>\n                <p className=\"medium-show-medium-info\">{medium.info}</p>\n                \n              </div>\n            </div>\n          </div>\n          <div className=\"medium-show-row\">\n            <Reviews mediumId={medium.id} />\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default MediumShow","/* eslint-disable camelcase */\nimport React from 'react'\nimport { registerUser, loginUser } from '../../lib/api'\nimport { Redirect } from 'react-router-dom'\nimport { setToken } from '../../lib/auth'\nimport registerimage4 from '../../images/registerimage4.png'\n\n\nclass Register extends React.Component {\n  state = {\n    formData: {\n      first_name: '',\n      last_name: '',\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: ''\n    },\n    redirect: false,\n    loading: false,\n    errors: {\n      first_name: '',\n      last_name: '',\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: ''\n    }\n  }\n\n  handleChange = event => {\n    // console.log('this is event.target.name', event.target.name)\n    // console.log('this is event.target.value', event.target.value)\n    const formData = { ...this.state.formData, [event.target.name]: event.target.value }\n    const errors = { ...this.state.errors, [event.target.name]: '' }\n    this.setState({ formData, errors })\n  }\n\n\n\n  handleSubmit = async event => {\n    event.preventDefault()\n    try {\n      this.setState({ loading: true })\n      const response = await registerUser(this.state.formData)\n      console.log('this is the registerUser', response )\n      //If registration goes well, run the login user function with the formdata, then set token and redirect to profile page\n      if (response.status === 200) {\n        console.log('is this working')\n\n        const loginResponse = await loginUser(this.state.formData)\n\n        console.log('this is the loginResponse', loginResponse)\n\n        setToken(loginResponse.data.token)\n        this.setState({ redirect: true })\n      }\n      if (response.status === 422) throw new Error()\n    } catch (err) {\n      console.log('response: ', err.response.data.errors)\n      //need to send handleErrors function the errors array from the 422 response as args\n      this.handleErrors(err.response.data.errors)\n      this.setState({ loading: false })\n    }\n  }\n\n  handleErrors = (errors) => {\n    let first_name = ''\n    let last_name = ''\n    let username = ''\n    let email = ''\n    let password = ''\n    let password_confirmation = ''\n    \n    if (errors.first_name) {\n      first_name = 'Your First Name Is Required'\n    }\n    if (errors.last_name) {\n      last_name = 'Your Last Name Is Required'\n    }\n    if (errors.username) {\n      username = 'Your Username Is Required'\n    }\n    if (errors.email && errors.email.kind === 'required') {\n      email = 'Your email Is Required'\n    }\n    if (errors.email && errors.email.kind === 'unique') {\n      email = 'You already have an account, go to sign in'\n    }\n    if (errors.password) {\n      password = 'Password is required'\n    }\n    if (errors.password_confirmation) {\n      password_confirmation = 'Password confirmation does not match'\n    }\n    this.setState({ errors: { first_name, last_name, username, email, password, password_confirmation } })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />\n    }\n  }\n\n  sendData = () => {\n    this.props.history.push('/login')\n    // console.log('this is sendData')\n  }\n\n  render() {\n    const { formData, errors } = this.state\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"fam-title-index-container\">\n          <h1 className=\"home-tile-fam\">FAM</h1>\n        </div>\n        <section className=\"section register-section\" style={{ backgroundImage: `url(${registerimage4})` }}>\n          {this.renderRedirect()}\n          <div className=\"\">\n            <div className=\"columns register-columns\">\n              <form  onSubmit={this.handleSubmit} className=\"column register-form\">\n                {/* <h1 className=\"has-text-centered\">Sign Up Here</h1><br /> */}\n\n                {/* FIRST NAME*/}\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={`input ${errors.first_name ? 'is-danger' : ''}`}\n                      placeholder=\"First Name\"\n                      name=\"first_name\"\n                      onChange={this.handleChange}\n                      value={formData.first_name}\n                    />\n                  </div>\n                  {errors.first_name ? <small className=\"help is-danger\">{errors.first_name}</small> : ''}\n                </div>\n\n                {/* LAST NAME */}\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={`input ${errors.last_name ? 'is-danger' : ''}`}\n                      placeholder=\"Last Name\"\n                      name=\"last_name\"\n                      onChange={this.handleChange}\n                      value={formData.last_name}\n                    />\n                  </div>\n                  {errors.last_name ? <small className=\"help is-danger\">{errors.last_name}</small> : ''}\n                </div>\n\n                {/* USERNAME */}\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={`input ${errors.username ? 'is-danger' : ''}`}\n                      placeholder=\"Username\"\n                      name=\"username\"\n                      onChange={this.handleChange}\n                      value={formData.username}\n                    />\n                  </div>\n                  {errors.username ? <small className=\"help is-danger\">{errors.username}</small> : ''}\n                </div>\n\n                {/* EMAIL */}\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={`input ${errors.email ? 'is-danger' : ''}`}\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      onChange={this.handleChange}\n                      value={formData.email}\n                    />\n                  </div>\n                  {this.state.errors.email ? <small className=\"help is-danger\">{errors.email}</small> : ''}\n                </div>\n\n                {/* PASSWORD */}\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={`input ${errors.password ? 'is-danger' : ''}`}\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      onChange={this.handleChange}\n                      value={formData.password}\n                    />\n                  </div>\n                  {errors.password && <small className=\"help is-danger\">{errors.password}</small>}\n                </div>\n\n                {/* PASSWORD CONFIRMATION */}\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      type=\"password\"\n                      className={`input ${errors.password_confirmation ? 'is-danger' : ''}`}\n                      placeholder=\"Password Confirmation\"\n                      name=\"password_confirmation\"\n                      onChange={this.handleChange}\n                      value={formData.password_confirmation}\n                    />\n                  </div>\n                  {errors.password_confirmation && <small className=\"help is-danger\">{errors.password_confirmation}</small>}\n                </div>\n\n                <div className=\"field\">\n                  <button type=\"submit\" className={`button button-register is-fullwidth register-button ${this.state.loading ? 'is-loading' : ''}`}>Register</button>\n                </div>\n                <div className=\"field\">\n\n                  {/* HAVE AN ACCOUNT? SIGN IN HERE */}\n                  <button onClick={this.sendData} type=\"button\" className=\"button button-register is-fullwidth is-outlined is-register\">Have an account? Sign in Here</button>\n\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Register\n","import React from 'react'\nimport { loginUser } from '../../lib/api'\nimport { setToken } from '../../lib/auth'\nimport { Redirect } from 'react-router-dom'\nimport loginimage from '../../images/loginimage.png'\n\nclass Login extends React.Component {\n  state = {\n    formData: {\n      email: '',\n      password: ''\n    },\n    redirect: false,\n    loading: false,\n    error: ''\n  }\n\n  handleChange = event => {\n    const formData = { ...this.state.formData, [event.target.name]: event.target.value }\n    this.setState({ formData, error: '' })\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      this.setState({ loading: true })\n      const res = await loginUser(this.state.formData)\n      setToken(res.data.token)\n      \n      this.setState({ redirect: true })\n      \n    } catch (err) {\n      this.setState({ error: 'Invalid Credentials', loading: false })\n    }\n  }\n  sendData = () => {\n    this.props.history.push('/register')\n  }\n\n  handleClick = () => {\n    this.props.sendData(true)\n  }\n\n  renderRedirect = () => {\n    \n    if (this.state.redirect){\n      \n      return <Redirect to=\"/\" />\n    }\n  }\n\n  render() {\n    const { formData, error, loading } = this.state\n    return (\n      <div>\n        <div className=\"fam-title-index-container\">\n          <h1 className=\"home-tile-fam\">FAM</h1>\n        </div>\n        <section className=\"section login-section-background-image\" style={{ backgroundImage: `url(${loginimage})` }}>\n          {this.renderRedirect()}\n          <div className=\"container\">\n            <div className=\"columns\">\n              <form onSubmit={this.handleSubmit} className=\"column\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={`input ${error ? 'is-danger' : '' }`}\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      onChange={this.handleChange}\n                      value={formData.email}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      type=\"password\"\n                      className={`input ${error ? 'is-danger' : ''}`}\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      onChange={this.handleChange}\n                      value={formData.password}\n                    />\n                  </div>\n                  {error && <small className=\"help is-danger\">{error}</small>}\n                </div>\n                <div className=\"field\">\n                  <button type=\"submit\" className={`button is-fullwidth login-button ${loading ? 'is-loading' : ''}`}>Login</button>\n                </div>\n                <div className=\"field\">\n              \n                  <button onClick={this.sendData}type=\"button\" className=\"button is-fullwidth is-outlined is-register\">No Account? Sign Up Here</button>\n            \n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","/* eslint-disable no-mixed-spaces-and-tabs */\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { getSingleUser } from '../../lib/api'\nimport filmimage from '../../images/filmimage.jpg'\nimport artimage from '../../images/artimage.jpg'\nimport musicimage from '../../images/musicimage.jpg'\n\nclass Favourites extends React.Component {\n  state = {\n    user: null,\n    buttonClicked: false,\n    categoryId: '',\n    favesToRender: []\n  }\n\n\n\n  async componentDidMount() {\n    try {\n      const userId = this.props.match.params.id\n      const res = await getSingleUser(userId)\n      this.setState({ user: res.data })\n    } catch (err) {\n      console.log(err.response)\n    }\n  }\n\n  handleClick = async event => {\n    this.state.buttonClicked = true\n    const categoryId = event.target.value\n    this.setState({ categoryId: categoryId })\n\n    const userFaves = this.state.user.favourites.map(favourite => (\n      favourite.medium\n    ))\n\n    const favesToRender = userFaves.filter(medium => (\n      medium.category === parseInt(categoryId)\n    ))\n\n    await this.setState({ favesToRender: favesToRender })\n\n\n  }\n\n\n\n\n\n  render() {\n\n    if (!this.state.favesToRender) return null\n    const { buttonClicked, favesToRender } = this.state\n\n    return (\n      <>\n        <div className=\"fam-title-index-container\">\n          <h1 className=\"home-tile-fam\">FAM</h1>\n        </div>\n        <div className=\"favourite-buttons-container\">\n          <button style={{ backgroundImage: `url(${filmimage})` }} className=\"favourites-button film-favourite-image\" onClick={this.handleClick} value='2'><h1 className=\"favourites-button-text\">Film</h1></button>\n          <button style={{ backgroundImage: `url(${artimage})` }} className=\"favourites-button art-favourite-image\" onClick={this.handleClick} value='1'><h1 className=\"favourites-button-text\">Art</h1></button>\n          <button style={{ backgroundImage: `url(${musicimage})` }} className=\"favourites-button music-favourite-image\" onClick={this.handleClick} value='3'><h1 className=\"favourites-button-text\">Music</h1></button>\n        </div>\n        <div className=\"favourites-medium-wrap\">\n          <div className=\"favourites-mediums-container\">\n            {buttonClicked ? favesToRender.map((favourite, index) => (\n\n              <div className=\"favourites-item\" key={index}>\n                <h1 className=\"favourite-title\">{favourite.title}</h1>\n                <h2>{favourite.creator}</h2>\n                <h2 className=\"favourite-duration\">{favourite.duration}</h2>\n                <Link to={`/mediums/${favourite.id}`}>\n                  <img className=\"favourites-medium-image\" src={favourite.image} alt={favourite.title} />\n                </Link>\n              </div>\n\n            )) : null}\n          </div>\n        </div>\n      </>\n    )\n\n\n\n\n\n  }\n}\n\nexport default Favourites","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Home from './components/common/Home'\nimport Navbar from './components/common/Navbar'\nimport Footer from './components/common/Footer'\nimport ErrorPage from './components/common/Error'\nimport SecureRoute from './components/common/SecureRoute' \nimport FilmIndex from './components/mediums/FilmIndex'\nimport ArtIndex from './components/mediums/ArtIndex'\nimport MusicIndex from './components/mediums/MusicIndex'\nimport MediumShow from './components/mediums/MediumShow'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Favourites from './components/common/Favourites'\n\nconsole.log('%cThis app was built by Eleanor & Yarden, check us out on github:', 'color:#C8A2C8;font-size:20px;font-weight:bold')\nconsole.log('%cEleanor: github.com/ebyass \\nYarden: github.com/YBL123', 'color:#8BD6BB;font-size:16px')\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <site-wrapper>\n        <Navbar />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/mediums/:id\" component={MediumShow} />\n            <Route path=\"/film\" component={FilmIndex} />\n            <Route path=\"/art\" component={ArtIndex} />\n            <Route path=\"/music\" component={MusicIndex} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <SecureRoute path=\"/profile\" component={Favourites} />\n            <Route path=\"/*\" component={ErrorPage} />\n          </Switch>\n          <Footer />\n        </main>\n      </site-wrapper>\n    </BrowserRouter>\n  )\n}\n\n\n\n\n\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}